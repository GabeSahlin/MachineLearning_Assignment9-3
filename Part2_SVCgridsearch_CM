import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
from sklearn.metrics import confusion_matrix, ConfusionMatrixDisplay
from sklearn.model_selection import GridSearchCV ,cross_validate, train_test_split
from sklearn.svm import SVC

df = pd.read_csv("BankNote_Authentication.csv")

# Select variables
y = df.iloc[:, -1].copy().to_numpy() #label
X = df.iloc[:, :-1].copy().to_numpy()

# normalize the data
X = (X - np.average(X, axis=0)) / np.std(X, axis=0)
# Test size
test_size = 0.3

# Train/test split with 30% left as a test set
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=test_size)

#gridsearch with alpha .001 <-> 0.01
reg = SVC(kernel='linear')
parameters = {"C": np.linspace(0.01, 0.1, num=10)}
grid_search = GridSearchCV(reg, param_grid=parameters, cv=5, scoring="accuracy")
grid_search.fit(X_train, y_train)
score_df = pd.DataFrame(grid_search.cv_results_)
print(score_df[['param_C', 'mean_test_score', 'rank_test_score']])

clf = SVC(C=0.1, kernel='linear')
clf.fit(X_train, y_train)
print(f"Score: {clf.score(X_test, y_test):.3f}")

cm = confusion_matrix(y_test, clf.predict(X_test), normalize="true")
disp_cm = ConfusionMatrixDisplay(cm, display_labels=clf.classes_)
disp_cm.plot()
plt.show()
